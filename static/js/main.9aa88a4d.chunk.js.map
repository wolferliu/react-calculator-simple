{"version":3,"sources":["App.js","index.js"],"names":["NumberButton","props","numberClass","num","className","onClick","OperatorButton","myClass","operator","pressedOperator","CommandButton","command","App","useState","setOperator","setPressedOperator","leftValue","setLeftValue","rightValue","setRightValue","showValue","setShowValue","handleNumber","indexOf","tmp","handleOperator","console","log","doCalculate","result","leftNum","parseFloat","rightNum","Math","pow","resultForShow","round","substr","class","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9aa88a4d.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\n\nconst MAX_DECIMAL = 8;\nfunction NumberButton(props) {\n  const onClick = () => {\n    props.onClick(props.num);\n  };\n  let numberClass = props.num === \"0\" ? \"cal-zero-button\" : \"cal-number-button\";\n  return (\n    <button className={\"cal-button-general \" + numberClass} onClick={onClick}>\n      {props.num}\n    </button>\n  );\n}\n\nfunction OperatorButton(props) {\n  const onClick = () => {\n    props.onClick(props.operator);\n  };\n  let myClass = \"cal-button-general \";\n  myClass +=\n    props.operator === props.pressedOperator\n      ? \"cal-operator-highlight\"\n      : \"cal-operator-button\";\n  return (\n    <button className={myClass} onClick={onClick}>\n      {props.operator}\n    </button>\n  );\n}\n\nfunction CommandButton(props) {\n  const onClick = () => {\n    props.onClick();\n  };\n  return (\n    <button className=\"cal-button-general cal-command-button\" onClick={onClick}>\n      {props.command}\n    </button>\n  );\n}\n\nexport default function App() {\n  const [operator, setOperator] = useState(\"\");\n  const [pressedOperator, setPressedOperator] = useState(\"\");\n  const [leftValue, setLeftValue] = useState(\"0\");\n  const [rightValue, setRightValue] = useState(\"0\");\n  const [showValue, setShowValue] = useState(\"0\");\n\n  const handleNumber = (num) => {\n    if (num === \".\" && showValue.indexOf(\".\") > -1) {\n      return;\n    }\n    if (pressedOperator === \"\" && (showValue !== \"0\" || num === \".\")) {\n      let tmp = showValue + num;\n      setShowValue(tmp);\n      setRightValue(tmp);\n    } else {\n      setShowValue(num);\n      setRightValue(num);\n      setPressedOperator(\"\");\n    }\n  };\n\n  const handleOperator = (operator) => {\n    console.log(operator);\n    if (operator === \"=\") {\n      doCalculate();\n    } else {\n      let tmp = showValue;\n      setLeftValue(tmp);\n      setRightValue(tmp);\n      setOperator(operator);\n      setPressedOperator(operator);\n    }\n  };\n\n  const doCalculate = () => {\n    let result;\n    const leftNum = parseFloat(leftValue);\n    const rightNum = parseFloat(rightValue);\n    if (operator === \"+\") {\n      result = leftNum + rightNum;\n    } else if (operator === \"-\") {\n      result = leftNum - rightNum;\n    } else if (operator === \"*\") {\n      result = leftNum * rightNum;\n    } else if (operator === \"/\") {\n      result = leftNum / rightNum;\n    }\n    if (result >= Math.pow(10, 16)) {\n      result = \"NaN\";\n    }\n    let resultForShow =\n      result === \"NaN\"\n        ? \"NaN\"\n        : Math.round(result * Math.pow(10, MAX_DECIMAL)) /\n          Math.pow(10, MAX_DECIMAL);\n    setLeftValue((resultForShow + \"\").substr(0, 18));\n    setShowValue((resultForShow + \"\").substr(0, 15));\n    setPressedOperator(\"=\");\n  };\n\n  const handleClear = () => {\n    if (showValue === \"0\") {\n      setLeftValue(\"0\");\n      setRightValue(\"0\");\n      setOperator(\"\");\n      setPressedOperator(\"\");\n    } else {\n      setRightValue(\"0\");\n      setShowValue(\"0\");\n    }\n  };\n\n  const handleChangeSign = () => {\n    let tmp = 0 - parseFloat(showValue) + \"\";\n    setShowValue(tmp);\n    setLeftValue(tmp);\n    setPressedOperator(\"+/-\");\n  };\n\n  const handlePercent = () => {\n    let tmp = parseFloat(showValue) / 100 + \"\";\n    setShowValue(tmp);\n    setLeftValue(tmp);\n    setPressedOperator(\"%\");\n  };\n\n  return (\n    <div className=\"App\">\n      <div class=\"cal-button-container\">\n        <div className=\"cal-result-window\">\n          <div className=\"cal-result-operator\"></div>\n          <div className=\"cal-result-number\">{showValue}</div>\n        </div>\n\n        <CommandButton\n          command={showValue === \"0\" ? \"AC\" : \"C\"}\n          onClick={handleClear}\n        />\n        <CommandButton command=\"+/-\" onClick={handleChangeSign} />\n        <CommandButton command=\"%\" onClick={handlePercent} />\n        <OperatorButton\n          operator=\"/\"\n          pressedOperator={pressedOperator}\n          onClick={handleOperator}\n        />\n\n        <NumberButton num=\"7\" onClick={handleNumber} />\n        <NumberButton num=\"8\" onClick={handleNumber} />\n        <NumberButton num=\"9\" onClick={handleNumber} />\n        <OperatorButton\n          operator=\"*\"\n          pressedOperator={pressedOperator}\n          onClick={handleOperator}\n        />\n\n        <NumberButton num=\"4\" onClick={handleNumber} />\n        <NumberButton num=\"5\" onClick={handleNumber} />\n        <NumberButton num=\"6\" onClick={handleNumber} />\n        <OperatorButton\n          operator=\"-\"\n          pressedOperator={pressedOperator}\n          onClick={handleOperator}\n        />\n\n        <NumberButton num=\"1\" onClick={handleNumber} />\n        <NumberButton num=\"2\" onClick={handleNumber} />\n        <NumberButton num=\"3\" onClick={handleNumber} />\n        <OperatorButton\n          operator=\"+\"\n          pressedOperator={pressedOperator}\n          onClick={handleOperator}\n        />\n\n        <NumberButton num=\"0\" onClick={handleNumber} />\n        <NumberButton num=\".\" onClick={handleNumber} />\n        <OperatorButton operator=\"=\" onClick={handleOperator} />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}